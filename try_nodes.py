import numpy as np
import math
import pickle
from scipy.optimize import newton
from scipy.special import gamma, comb

with open('20x_alphas.pkl', 'rb') as file:
    pairs = pickle.load(file)

# Задаем параметры
n = 50  # Порядок КФНСТ
s = 1  # Параметр s
alpha_steps = 100


def P_n_s(x):
    total = 0
    for k in range(n + 1):
        coeff = (-1) ** (n - k) * comb(n, k) * pochhammer(n + s - 1, k)
        total += coeff * x ** k
    return total


def pochhammer(a, k):
    if k == 0:
        return 1
    else:
        return np.prod([a + i for i in range(k)])


for q in pairs:
    print(f"Узел : {q}, P(x)={P_n_s(q)}")

area_split_29 = [(-0.2, 0, 1, 1.1), (-0.4, -0.2, 1.05, 1.15), (-0.6, -0.7, 1.1, 1.125),
                 (-0.75, -0.6, 1.05, 1.125), (-0.9, -0.75, 1, 1.1), (-1.05, -0.9, 0.9, 1.05),
                 (-1.2, -1.05, 0.75, 0.95), (-1.3, -1.2, 0.65, 0.8), (-1.35, -1.3, 0.55, 0.7),
                 (-1.4, -1.35, 0.4, 0.6), (-1.45, -1.4, 0.35, 0.5), (-1.5, -1.45, 0.25, 0.4),
                 (-1.525, -1.475, 0.15, 0.25), (-1.525, -1.475, 0.05, 0.15),
                 (-1.525, -1.5, -0.05, 0.05),
                 (-1.525, -1.475, -0.15, -0.05), (-1.525, -1.475, -0.25, -0.15), (-1.5, -1.45, -0.4, -0.25),
                 (-1.45, -1.4, -0.5, -0.35), (-1.4, -1.35, -0.6, -0.4), (-1.35, -1.3, -0.7, -0.55),
                 (-1.3, -1.2, -0.8, -0.65), (-1.2, -1.05, -0.95, -0.75), (-1.05, -0.9, -1.05, -0.9),
                 (-0.9, -0.75, -1.1, -1), (-0.75, -0.6, -1.125, -1.05), (-0.6, -0.7, -1.125, -1.1),
                 (-0.4, -0.2, -1.15, -1.05), (-0.2, 0, -1.1, -1)
                 ]
for q in reversed(area_split_29):
    print("(", q[0], ",", q[1], ",", -q[3], ",", -q[2], ")")
